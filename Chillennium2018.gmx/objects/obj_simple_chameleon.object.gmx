<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_chameleon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_scale = 0.3;
image_xscale = image_scale;
image_yscale = image_scale;
image_speed = 0

if(instance_exists(obj_menu)) {
    with(obj_menu) {
        other.x = room_width/3 + 120;
        switch(select) {
        case 0:
            other.y = y1 + 40;
            break;
        case 1:
            other.y = y2 + 40;
            break;
        case 2:
            other.y = y3 + 40;
            break;
        case 3:
            other.y = y4 + 40;
            break;
        }
    }
} else if(instance_exists(obj_final)) {
    with(obj_final) {
        other.x = room_width/3 + 120;
        switch(select) {
        case 0:
            other.y = y1 + 40;
            break;
        case 1:
            other.y = y2 + 40;
            break;
        }
    }
}
type = obj_swarm_grass;

insect = noone
hit = false
fired = false
aim_angle = 180
fire_angle = 180
target_angle = 0
target_image_index = 0
prev_image_index = 0
target_image_alpha = 1.0

aim_angle = 180 - aim_angle
fire_angle = 180 - fire_angle
target_angle = 180 - target_angle

fire_speed = room_speed / 4
head_scale = 0.4
head_fire_speed = room_speed / 80

var eye_offset_x = 60 * image_scale;
var eye_offset_y = -12 * image_scale;
var eye_offset_open_x = 60 * image_scale;
var eye_offset_open_y = -100 * image_scale;
eye_dir = point_direction(0, 0, eye_offset_x, eye_offset_y);
eye_dist = point_distance(0, 0, eye_offset_x, eye_offset_y);

eye_open_dir = point_direction(0, 0, eye_offset_open_x, eye_offset_open_y);
eye_open_dist = point_distance(0, 0, eye_offset_open_x, eye_offset_open_y);

head_xoffset = 0
head_yoffset = 0

head = instance_create(x, y, obj_head);
head.image_xscale = image_scale;
head.image_yscale = image_scale;
tongue = instance_create(x, y, obj_tongue)
tongue.image_xscale = image_scale * 2;
tongue.image_yscale = image_scale * 2;
eye = instance_create(x, y, obj_eye)
eye.image_xscale = image_scale;
eye.image_yscale = image_scale;

eye.x += eye_offset_x;
eye.y += eye_offset_y

stun_eye_speed = room_speed / 20;

bite_speed = room_speed / 96
biting = false;
// You played yourself
bite_stun = false;

fire_ready = false
bite_ready = false
should_hit = false
enemy_type = noone
enemy_eye = noone
loop_time = room_speed * 2

head.prev_sprite_index = spr_head_grass
head.target_sprite_index = spr_head_grass
target_image_index = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy(head);
instance_destroy(tongue);
instance_destroy(eye);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bite_ready = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bite_stun = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bite_success = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(gamepad_button_check_pressed(global.player, gp_face1)) {
    fire_ready = true;
}

if global.player == -1 {
    image_alpha = 0
    target_image_alpha = 0
    eye.image_alpha = 0
    head.image_alpha = 0
    exit
} else {
    image_alpha = 1
    target_image_alpha = 1
    eye.image_alpha = 1
    head.image_alpha = 1
}

if bite_ready {
    biting = true;
    head.image_speed = bite_speed;
    if bite_should_succeed {
        bite_success = true;
        alarm[0] = room_speed * .25;
    } else {
        bite_stun = true;
        alarm[1] = room_speed;
    }
    
    bite_ready = false
    alarm[2] = loop_time
}

if biting {
    if head.image_index + head.image_speed &gt;= sprite_get_number(head.target_sprite_index) {
        head.image_speed = -bite_speed;
    }
    
    if head.image_index + head.image_speed &lt; 0 {
        head.image_speed = 0
        biting = false;
    }
}

if fired {
    // check tongue distance
    var distance = point_distance(tongue.start_x, tongue.start_y, tongue.x, tongue.y)
    with tongue {
        length = distance
    }
    if distance &gt; tongue.sprite_width {
        // return
        tongue.speed = -fire_speed
        tongue.length = tongue.sprite_width
    } else if abs(fire_angle - point_direction(tongue.start_x, tongue.start_y, tongue.x, tongue.y)) &gt; 0.1 {
        // stop
        head.image_speed = -1.5;
        tongue.speed = 0
        tongue.length = 0
        tongue.x = tongue.start_x
        tongue.y = tongue.start_y
        fired = false
        hit = false
        fire_stun = false;
    }
}

// tongue fire
if fire_ready {
    head.image_speed = head_fire_speed;

    fired = true
    tongue.speed = fire_speed
    
    fire_ready = false
}

var new_eye_dir = head.image_angle + eye_dir;
var x_off = lengthdir_x(eye_dist, new_eye_dir);
var y_off = lengthdir_y(eye_dist, new_eye_dir);

var new_eye_open_dir = head.image_angle + eye_open_dir;
var x_open_off = lengthdir_x(eye_open_dist, new_eye_open_dir);
var y_open_off = lengthdir_y(eye_open_dist, new_eye_open_dir);

var alpha = head.image_index / sprite_get_number(head.target_sprite_index);
eye.x = head.x + lerp(x_off, x_open_off, alpha);
eye.y = head.y + lerp(y_off, y_open_off, alpha);

var head_offset = head_scale * alpha * 60
var up = 90
head_xoffset = lengthdir_x(head_offset, head.image_angle + up)
head_yoffset = lengthdir_y(head_offset, head.image_angle + up);
head.image_xscale = (1 + head_scale * alpha) * image_scale;
head.image_yscale = sign(head.image_yscale) * (1 + head_scale * alpha) * image_scale;
eye.image_xscale = (1 + head_scale * alpha) * image_scale;
eye.image_yscale = (1 + head_scale * alpha) * image_scale;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, prev_image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha)
draw_sprite_ext(sprite_index, target_image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, target_image_alpha)
draw_sprite_ext(head.prev_sprite_index, head.image_index, head.x + head_xoffset, head.y + head_yoffset, head.image_xscale, head.image_yscale, head.image_angle, head.image_blend, head.image_alpha)
draw_sprite_ext(head.target_sprite_index, head.image_index, head.x + head_xoffset, head.y + head_yoffset, head.image_xscale, head.image_yscale, head.image_angle, head.image_blend, target_image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
