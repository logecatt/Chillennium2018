<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rec_left = 0;
rec_top = 0;
rec_right = 0;
rec_bottom = 0;
left_count = 0;
right_count = 0;
top_count = 0;
bottom_count = 0;
spd = 15;
move = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (move) {
    if (point_distance(x, y, dest_x, dest_y) &lt; 16) {
        if (left_count - right_count &lt; -3) {
            var ran_left = rect_left;
            var ran_right = rect_midx;
        } else if (left_count - right_count &gt; 3) {
            var ran_left = rect_midx;
            var ran_right = rect_right;
        } else {
            var ran_left = rect_left;
            var ran_right = rect_right;
        }
        if (top_count - bottom_count &lt; -3) {
            var ran_top = rect_top;
            var ran_bottom = rect_midy;
        } else if (top_count - bottom_count &gt; 3) {
            var ran_top = rect_midy;
            var ran_bottom = rect_bottom;
        } else {
            var ran_top = rect_top;
            var ran_bottom = rect_bottom;
        }
        dest_x = random_range(ran_left, ran_right);
        dest_y = random_range(ran_top, ran_bottom);
        if (dest_x &gt;= rect_midx) {
            right_count++;
        } else {
            left_count++;
        }
        if (dest_y &gt;= rect_midy) {
            bottom_count++;
        } else {
            top_count++;
        }
    }
    var dir = point_direction(x, y, dest_x, dest_y);
    var cspd = min(spd, point_distance(x, y, dest_y, dest_y));
    var sdir = random_range(0, 359);
    var sspd = random_range(7, cspd - 2);
    dx = x + lengthdir_x(cspd, dir) + lengthdir_x(sspd, sdir);
    dy = y + lengthdir_y(cspd, dir) + lengthdir_y(sspd, sdir);
    move = false;
    alarm[0] = room_speed / 4;
}
if (abs(x - dx) &lt; 0.5 &amp;&amp; abs(y - dy) &lt; 0.5) {
    move = true;
}
move_towards_point(dx, dy, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rect_midx = rect_left + (rect_right - rect_left) / 2;
rect_midy = rect_top + (rect_bottom - rect_top) / 2;
dest_x = irandom_range(rect_left, rect_right);
dest_y = irandom_range(rect_top, rect_bottom);
x = dest_x;
y = dest_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
